//1. 固定步长，转换元素-----双指针
class Solution {
    public void rotate(int[] nums, int k) {
        k = k % nums.length;
        int count = 0;
        for (int i = 0; count < nums.length; ++i) {
            int j = i;
            int pre = nums[i];
            do {
                nums[i] = pre;
                pre = nums[(j + k) % nums.length];
                nums[(j + k) % nums.length] = nums[i];
                ++count;
                j = (j + k) % nums.length;
            } while (j != i);
        }
    }
}

//2. 双重转换
class Solution {
    public void rotate(int[] nums, int k) {
        k = k % nums.length;
        reverse(nums, 0, nums.length-1);
        reverse(nums, 0, k-1);
        reverse(nums, k, nums.length-1);
    }
    public void reverse(int[] nums, int s, int e) {
        for (int i = s; i < (s + e + 1) / 2; ++i) {
            int tmp = nums[i];
            nums[i] = nums[s + e - i];
            nums[s+e-i] = tmp;
        }
    }
}